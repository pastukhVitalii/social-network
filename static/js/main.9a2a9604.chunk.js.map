{"version":3,"sources":["redux/dialogs-reducer.js","components/Footer/Footer.module.css","img/profile-avatar-png-4.png","img/preloader5.svg","api/api.js","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.module.css","components/Footer/Footer.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User/User.js","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","hoc/withSuspense.js","App.js","serviceWorker.js","redux/navbar-reducer.js","redux/redux-store.js","index.js","components/Users/Users.module.css","components/common/Preloader/Preloader.js","components/Header/Header.module.css","components/common/FormsControls/FormsControls.jsx","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","App.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","getName","getPhotos","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","logout","Footer","className","css","site","href","Navbar","props","item","to","activeClassName","activeLink","News","users","totalUsersCount","isFetching","followingInProgress","fake","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","map","u","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","alt","btn","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","dispatch","resultCode","followSuccess","unfollowSuccess","page","items","totalCount","Header","logo","logoTitle","loginBlock","isAuth","btnLogin","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Input","textarea","checkbox","error","formSummaryError","length","stopSubmit","_error","initialized","appReducer","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","wrap","content","path","render","withRouter","app","promise","Promise","all","Boolean","window","location","hostname","match","bestFriends","navBarReducer","reducer","combineReducers","profilePage","profileReducer","dialogsPage","navBar","formReducer","store","createStore","applyMiddleware","thunkMiddleware","renderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","preloader","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","value","maxLengthCreator","maxLength","posts","likeCount","newPostText","profile","aboutMe","fullName","addPostActionCreator","setStatusAC","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.9a2a9604.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    {id: 1, name: 'Dimych'},\r\n    {id: 2, name: 'Roman'},\r\n    {id: 3, name: 'Mark'},\r\n    {id: 4, name: 'Igor'}\r\n  ],\r\n  messages: [\r\n    {id: 1, message: 'Hi!'},\r\n    {id: 2, message: 'Hello!'},\r\n    {id: 3, message: 'Yo'},\r\n    {id: 4, message: ':)'}\r\n  ],\r\n}\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: 6, message: body}]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"site\":\"Footer_site__2KZHz\"};","module.exports = __webpack_public_path__ + \"static/media/profile-avatar-png-4.2a0429f4.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader5.3a762010.svg\";","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    \"API-KEY\": \"eec707e4-21e7-4972-ae6a-c9f0a894d660\"\r\n  }\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`)\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`)\r\n  },\r\n  getProfile(userId) {\r\n    console.warn('Obsolete method. Please profileAPI object.')\r\n    return profileAPI.getProfile(userId);\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/` + userId);\r\n  },\r\n  getName(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getPhotos(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, {status: status});\r\n  },\r\n  savePhoto(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", photoFile);\r\n\r\n    return instance.put(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe});\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Navbar_item__1o5LB\",\"activeLink\":\"Navbar_activeLink__1GGGu\",\"subTitle\":\"Navbar_subTitle__3ladz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2w0qN\",\"error\":\"FormsControls_error__1FA7r\",\"formSummaryError\":\"FormsControls_formSummaryError__2KJHM\",\"login\":\"FormsControls_login__24fLK\",\"textarea\":\"FormsControls_textarea__3NcND\",\"checkbox\":\"FormsControls_checkbox__1OW8f\",\"btn\":\"FormsControls_btn__3lU39\"};","import React from \"react\";\r\nimport css from \"./Footer.module.css\";\r\n\r\nlet Footer = () => {\r\n  return (\r\n\t\t<footer>\r\n\t\t\t<div className={css.site}>\r\n\t\t\t\t<a href=\"#s\">www.site.com</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport css from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Navbar = (props) => {\r\n  /*let friendsArr = props.state.bestFriends.map(f => {\r\n    return <div>{f.name + ' '}</div>\r\n  });*/\r\n  return (\r\n    <nav>\r\n      <div className={css.item}>\r\n        <NavLink to='/profile' activeClassName={css.activeLink}>Profile</NavLink>\r\n      </div>\r\n      <div className={css.item}>\r\n        <NavLink to='/dialogs' activeClassName={css.activeLink}>Messages</NavLink>\r\n      </div>\r\n      <div className={css.item}>\r\n        <NavLink to='/users' activeClassName={css.activeLink}>Users</NavLink>\r\n      </div>\r\n      <div className={css.item}>\r\n        <NavLink to='/news' activeClassName={css.activeLink}>News</NavLink>\r\n      </div>\r\n      <div className={css.item}>\r\n        <NavLink to='/music' activeClassName={css.activeLink}>Music</NavLink>\r\n      </div>\r\n      <div className={css.item}>\r\n        <NavLink to='/settings' activeClassName={css.activeLink}>Settings</NavLink>\r\n      </div>\r\n      {/*<div className={css.bestFriends}>\r\n        <div className={css.subTitle}>\r\n          Best Friends\r\n        </div>\r\n        <div className={css.friends}>\r\n          <div className={css.item}>\r\n            {friendsArr}\r\n          </div>\r\n        </div>\r\n      </div>*/}\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nlet News = (props) => {\r\n  return (\r\n\t\t<div>\r\n      News\r\n    </div>\r\n\t)\r\n}\r\n\r\nexport default News;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"FAKE\":\r\n            return {...state, fake: state.fake + 1}\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) => (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    usersAPI.follow(userId)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n}\r\nexport const unfollow = (userId) => (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport css from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\ndebugger\r\n    return <div className={css.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [css.selectedPage]: currentPage === p\r\n                }, css.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport css from '../Users.module.css';\r\nimport userPhoto from '../../../img/profile-avatar-png-4.png';\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n  return (\r\n    <div className={css.user}>\r\n      <span>\r\n        <div>\r\n          <NavLink to={'/profile/' + user.id}>\r\n            <img src={user.photos.small != null ? user.photos.small : userPhoto} className={css.userPhoto} alt='user'/>\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n        {user.followed\r\n          ? <button className={css.btn} disabled={followingInProgress\r\n            .some(id => id === user.id)}\r\n                    onClick={() => {\r\n                      unfollow(user.id)\r\n                    }}>\r\n            Unfollow</button>\r\n          : <button className={css.btn} disabled={followingInProgress.some(id => id === user.id)}\r\n                    onClick={() => {\r\n                      follow(user.id)\r\n                    }}>Follow</button>}\r\n         </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n      </span>\r\n    </div>)\r\n}\r\n\r\nexport default User;\r\n\r\n","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\nimport css from './Users.module.css'\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n  return (\r\n    <div>\r\n      <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                 totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n      <div className={css.users}>\r\n        {\r\n          users.map(u => <User user={u}\r\n                               followingInProgress={props.followingInProgress}\r\n                               key={u.id}\r\n                               unfollow={props.unfollow}\r\n                               follow={props.follow}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = () => {\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  follow,\r\n  setCurrentPage,\r\n  unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const {currentPage, pageSize} = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    const {pageSize} = this.props;\r\n    this.props.getUsers(pageNumber, pageSize);\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      {this.props.isFetching ? <Preloader/> : null}\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n             pageSize={this.props.pageSize}\r\n             currentPage={this.props.currentPage}\r\n             onPageChanged={this.onPageChanged}\r\n             users={this.props.users}\r\n             follow={this.props.follow}\r\n             unfollow={this.props.unfollow}\r\n             followingInProgress={this.props.followingInProgress}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from \"react\";\r\nimport css from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Header = (props) => {\r\n    return (\r\n        <header>\r\n            <div className={css.logo}>\r\n                <div className={css.logoTitle}>SN</div>\r\n            </div>\r\n            <div className={css.loginBlock}>\r\n                {props.isAuth\r\n                    ?\r\n                    <div>{props.login} - <button onClick={props.logout} className={css.btnLogin}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA, payload:\r\n    {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n  return authAPI.me()\r\n    .then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n      }\r\n    });\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n  authAPI.login(email, password, rememberMe)\r\n    .then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n      } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n      }\r\n    });\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  authAPI.logout()\r\n    .then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n      }\r\n    });\r\n}\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport css from '../common/FormsControls/FormsControls.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"}\r\n                       validate={[required]}\r\n                       component={Input} className={css.textarea}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input} className={css.textarea}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"} className={css.checkbox}/> remember me\r\n            </div>\r\n            {props.error && <div className={css.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button className={css.btn}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div className={css.login}>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  //dispatch(somethingelse());\r\n  //dispatch(somethingelse());\r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\n\r\nexport default appReducer;","import Preloader from \"../components/common/Preloader/Preloader\";\r\nimport React, { Suspense } from \"react\"\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n    return <Suspense fallback={<Preloader />} >\r\n      <Component {...props} />\r\n    </Suspense>\r\n  };\r\n}","import React from 'react';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport css from './App.module.css';\r\nimport Footer from './components/Footer/Footer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/News\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className={css.wrap}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={css.content}>\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer)}/>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)}/>\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}/>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n  bestFriends: [\r\n    {id: 1, name: 'Dimych'},\r\n    {id: 2, name: 'Roman'},\r\n    {id: 3, name: 'Mark'}\r\n  ]\r\n}\r\n\r\nconst navBarReducer = (state = initialState, action) => {\r\n  return state;\r\n}\r\n\r\nexport default navBarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport navBarReducer from \"./navbar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  navBar: navBarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n})\r\nlet store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nlet renderEntireTree = () => {\n\n  /*setInterval(() => {\n    store.dispatch({type: \"FAKE\"})\n}, 1000);*/\n\n  ReactDOM.render(\n    <BrowserRouter>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById('root')\n  );\n}\nrenderEntireTree();\n\nstore.subscribe(() => {\n  renderEntireTree()\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2VaCd\",\"userPhoto\":\"Users_userPhoto__2Zwsz\",\"btn\":\"Users_btn__nBlol\",\"user\":\"Users_user__1uCGT\"};","import React from 'react';\r\nimport preloader from \"../../../img/preloader5.svg\";\r\n\r\nlet Preloader = () => {\r\n  return <div>\r\n    <img src={preloader} alt='preloader'/>\r\n  </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__11-NS\",\"logoTitle\":\"Header_logoTitle__pQs1J\",\"loginBlock\":\"Header_loginBlock__7r6E9\",\"btnLogin\":\"Header_btnLogin__38vu6\"};","import React from \"react\";\r\nimport css from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={css.formControl + \" \" + (hasError ? css.error : \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      { hasError && <span>{meta.error}</span> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__RQ2ST\",\"pageNumber\":\"Paginator_pageNumber__3nHH1\",\"selectedPage\":\"Paginator_selectedPage__3ICT-\",\"btnArow\":\"Paginator_btnArow__3YPWd\"};","export const required = value => {\r\n  if (value) return undefined;\r\n\r\n  return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"App_wrap__2khGS\",\"content\":\"App_content__WRvWC\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SET_NAME = 'SET_NAME';\r\nconst SET_PHOTOS = 'SET_PHOTOS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: 'Hi, there', likeCount: 15},\r\n    {id: 2, message: 'How are you?', likeCount: 7}\r\n  ],\r\n  newPostText: 'it-kamasutra.com',\r\n  profile: null,\r\n  status: \"\",\r\n  aboutMe: \"\",\r\n  fullName: \"\",\r\n  photos: {}\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n  switch(action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPostText,\r\n        likeCount: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: ''\r\n      };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {...state, profile: action.profile}\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    }\r\n    case SET_NAME: {\r\n      return {\r\n        ...state,\r\n        fullName: action.fullName\r\n      }\r\n    }\r\n    case SET_PHOTOS: {\r\n      return {\r\n        ...state,\r\n        photos: action.photos\r\n      }\r\n    }\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(p => p.id !== action.postId)}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfileAC = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatusAC = (status) => ({type: SET_STATUS, status})\r\nexport const setNameAC = (fullName) => ({type: SET_NAME, fullName})\r\nexport const setPhotosAC = (photos) => ({type: SET_PHOTOS, photos})\r\nexport const deletePostAC = (postId) => ({type: DELETE_POST, postId})\r\n\r\n// Thunk\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n  usersAPI.getProfile(userId).then(response => {\r\n    dispatch(setUserProfileAC(response.data));\r\n  });\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n  profileAPI.getStatus(userId)\r\n    .then(response => {\r\n      dispatch(setStatusAC(response.data));\r\n    });\r\n}\r\nexport const getName = (userId) => (dispatch) => {\r\n  profileAPI.getName(userId)\r\n    .then(response => {\r\n      dispatch(setNameAC(response.data.fullName));\r\n    });\r\n}\r\n\r\nexport const getPhotos = (userId) => (dispatch) => {\r\n  profileAPI.getPhotos(userId)\r\n    .then(response => {\r\n      dispatch(setPhotosAC(response.data.photos));\r\n    });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n  profileAPI.updateStatus(status)\r\n    .then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(setStatusAC(status));\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}