{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Dialog","props","path","id","className","css","dialog","to","activeClassName","active","name","Message","date","Date","toLocaleTimeString","hour","minute","messages","text","message","tail","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","textarea","btn","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,SAAW,0BAA0B,IAAM,uB,oBCA/RD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,sBAAsB,IAAM,qBAAqB,MAAQ,yB,+FCYlKC,EATF,SAACC,GACZ,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,yBAAKC,UAAWC,IAAIC,QAClB,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAII,QAASR,EAAMS,Q,kBCO9CC,EAZD,SAACV,GACb,IAAIW,GAAO,IAAIC,MAAOC,mBAAmB,KAAM,CAACC,KAAM,UAAWC,OAAQ,YACzE,OACE,yBAAKZ,UAAWC,IAAIY,UAClB,yBAAKb,UAAWC,IAAIa,MAAOjB,EAAMkB,QAAQ,8BAEzC,yBAAKf,UAAWC,IAAIO,MAAOA,GAC3B,yBAAKR,UAAWC,IAAIe,S,0CCJpBC,EAAcC,YAAiB,IAkBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAhBQ,SAACtB,GACtB,OACE,0BAAMwB,SAAUxB,EAAMyB,cACpB,6BACE,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBW,YAAY,qBACZtB,KAAK,iBAAiBN,UAAWC,IAAI4B,YAE9C,6BACE,4BAAQ7B,UAAWC,IAAI6B,KAAvB,aCeOC,EA1BD,SAAClC,GACb,IAAImC,EAAQnC,EAAMoC,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQ/B,KAAM+B,EAAE/B,KAAMP,GAAIsC,EAAEtC,GAAIuC,IAAKD,EAAEtC,QACjFwC,EAAmBP,EAAMnB,SAASuB,KAAK,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAASuB,IAAKE,EAAEzC,QAMpF,OAAKF,EAAM4C,OAGT,yBAAKzC,UAAWC,IAAIkC,SAClB,yBAAKnC,UAAWC,IAAIyC,cACjBR,GAEH,yBAAKlC,UAAWC,IAAIY,UAClB,6BAAM0B,GACN,6BACE,kBAAC,EAAD,CAAgBlB,SAdJ,SAACsB,GACnB9C,EAAM+C,YAAYD,EAAOE,sBAGD,kBAAC,IAAD,CAAU1C,GAAI,Y,wCCbtC2C,EAA6B,SAACd,GAAD,MAAY,CAC3CS,OAAQT,EAAMe,KAAKN,S,OCeNO,sBACbC,aAfoB,SAACjB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACiB,GACxB,MAAO,CACLN,YAAa,SAACC,GACZK,EAASC,YAAmBN,UDPF,SAACO,GAAe,IAExCC,EAFuC,uKAIzC,OAAKC,KAAKzD,MAAM4C,OAET,kBAACW,EAAcE,KAAKzD,OAFI,kBAAC,IAAD,CAAUM,GAAG,eAJH,GAEboD,IAAMH,WAUtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCE5DL,CAGbjB","file":"static/js/3.bc31302a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__TCjbF\",\"dialogsItems\":\"Dialogs_dialogsItems__11480\",\"dialogsItem\":\"Dialogs_dialogsItem__1wwl1\",\"dialog\":\"Dialogs_dialog__lSibK\",\"active\":\"Dialogs_active__FApE1\",\"messages\":\"Dialogs_messages__3pqdq\",\"textarea\":\"Dialogs_textarea__mqWSG\",\"btn\":\"Dialogs_btn__3gi-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1jJUH\",\"text\":\"Message_text__acuTH\",\"date\":\"Message_date__KSkjF\",\"tail\":\"Message_tail__paXYz\",\"red\":\"Message_red__J6_T5\",\"black\":\"Message_black__2khrJ\"};","import React from \"react\";\r\nimport css from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Dialog = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n  return (\r\n    <div className={css.dialog}>\r\n      <NavLink to={path} activeClassName={css.active}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport css from \"./Message.module.css\";\r\n\r\nlet Message = (props) => {\r\n  let date = new Date().toLocaleTimeString('ru', {hour: '2-digit', minute: '2-digit'});\r\n  return (\r\n    <div className={css.messages}>\r\n      <div className={css.text}>{props.message}<br/>\r\n      </div>\r\n      <div className={css.date}>{date}</div>\r\n      <div className={css.tail}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport css from './Dialogs.module.css'\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea}\r\n               validate={[required, maxLength50]}\r\n               placeholder='Enter your message'\r\n               name=\"newMessageBody\" className={css.textarea} />\r\n      </div>\r\n      <div>\r\n        <button className={css.btn}>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n\r\n","import React from \"react\";\r\nimport css from \"./Dialogs.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\nlet Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map( d => <Dialog name={d.name} id={d.id} key={d.id} /> );\r\n  let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} />);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n  return (\r\n    <div className={css.dialogs}>\r\n      <div className={css.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={css.messages}>\r\n        <div>{messagesElements}</div>\r\n        <div>\r\n          <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    </div>\r\n</div>\r\n)\r\n}\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}