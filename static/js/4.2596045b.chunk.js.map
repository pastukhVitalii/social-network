{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileDescriptionWithHooks.jsx","components/Profile/ProfileInfo/Profileinfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","css","item","src","alt","message","likeCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","textarea","btn","MyPosts","React","memo","console","log","postsElement","posts","reverse","map","p","key","id","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileDescriptionWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","backgroundPhoto","userPhoto","photos","large","userDescription","userName","fullName","userStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","content","Preloader","Profile","Profileinfo","isOwner","store","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","getName","getPhotos","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.2596045b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1C9UC\",\"backgroundPhoto\":\"Profile_backgroundPhoto__2AqFs\",\"userPhoto\":\"Profile_userPhoto__23sDT\",\"userDescription\":\"Profile_userDescription__7Woao\",\"userName\":\"Profile_userName__1K9XH\",\"userStatus\":\"Profile_userStatus__3sa-L\",\"posts\":\"Profile_posts__3hG2d\",\"item\":\"Profile_item__1nyUK\",\"textarea\":\"Profile_textarea__1LNQF\",\"btn\":\"Profile_btn__1dX0v\"};","import React from \"react\";\r\nimport css from \"../../Profile.module.css\";\r\n\r\nlet Post = (props) => {\r\n    return (\r\n        <div className={css.item}>\r\n            <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRpllVVc01fT_q0UD6voIKBBw9RXGfxW6Te6hmqWS688PqHG7Ji&usqp=CAU\"\r\n                alt=\"user post\"/>\r\n            <div>{props.message}</div>\r\n            <span>{`like  ${props.likeCount}`}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport css from '../Profile.module.css';\r\n\r\nimport Post from \"./Post/Post\";\r\n\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} className={css.textarea}/>\r\n        </div>\r\n        <div>\r\n            <button className={css.btn}>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER\");\r\n    let postsElement =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likeCount={p.likeCount} key={p.id}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>New Post</div>\r\n            <div className={css.posts}>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            {postsElement}\r\n        </>\r\n    )\r\n});\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    //newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport css from '../../Profile.module.css';\r\n\r\nconst ProfileDescriptionWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={css.backgroundPhoto}>\r\n            <div className={css.userPhoto}>\r\n                {props.photos.large === null ? <img\r\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRpllVVc01fT_q0UD6voIKBBw9RXGfxW6Te6hmqWS688PqHG7Ji&usqp=CAU\"\r\n                        alt=\"user post\"/>\r\n                    : <img src={props.photos.large} alt=\"\"/>}\r\n            </div>\r\n            <div className={css.userDescription}>\r\n                <div className={css.userName}>\r\n                    {props.fullName}\r\n                </div>\r\n\r\n                {!editMode &&\r\n                <div className={css.userStatus}>status: &nbsp;\r\n                    <span onDoubleClick={activateEditMode}>{ props.status || \"-------\"}</span>\r\n                </div>}\r\n                {editMode &&\r\n                <div className={css.userStatus}>status:\r\n                    <input onChange={onStatusChange} autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           value={status}/>\r\n                </div>\r\n                }</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileDescriptionWithHooks;","import React from 'react';\r\nimport css from '../Profile.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileDescriptionWithHooks from \"./ProfileStatus/ProfileDescriptionWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, fullName, photos}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n    return (\r\n      <div className={css.content} >\r\n        <ProfileDescriptionWithHooks status={status} updateStatus={updateStatus} fullName={fullName} photos={photos}/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Profileinfo from \"./ProfileInfo/Profileinfo\";\r\nimport css from './Profile.module.css'\r\n\r\nlet Profile = (props) => {\r\n  return (\r\n    <div className={css.content}>\r\n      <Profileinfo profile={props.profile}\r\n                   isOwner={props.isOwner}\r\n                   status={props.status}\r\n                   updateStatus={props.updateStatus}\r\n                   fullName={props.fullName}\r\n                   photos={props.photos}/>\r\n      <MyPostsContainer store={props.store} />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus, getName, getPhotos} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n    this.props.getName(userId);\r\n    this.props.getPhotos(userId);\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"RENDER PROFILE\");\r\n    return (\r\n      <Profile {...this.props}\r\n               profile={this.props.profile}\r\n               status={this.props.status}\r\n               fullName={this.props.fullName}\r\n               photos={this.props.photos}\r\n               updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  //console.log('mapStateToProps PROFILE')\r\n  return ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    fullName: state.profilePage.fullName,\r\n    photos: state.profilePage.photos,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  })\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, getName, getPhotos}),\r\n  withRouter,\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}