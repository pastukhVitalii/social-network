{"version":3,"sources":["components/Footer/Footer.module.css","components/Users/Users.module.css","img/profile-avatar-png-4.png","img/preloader5.svg","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Footer/Footer.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","redux/dialogs-reducer.js","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","api/api.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User/User.js","components/Users/Users.js","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/Profileinfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","serviceWorker.js","redux/navbar-reducer.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControls.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/common/Paginator/Paginator.module.css","components/Profile/ProfileInfo/Profileinfo.module.css","App.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Header/Header.module.css"],"names":["module","exports","Footer","className","css","site","href","Navbar","props","item","to","activeClassName","activeLink","News","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","body","newMessageBody","Dialog","path","dialog","active","Message","date","Date","toLocaleTimeString","hour","minute","text","tail","FormControl","input","meta","child","hasError","touched","error","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsPage","dialogsElements","map","d","messagesElements","m","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","users","totalUsersCount","isFetching","followingInProgress","fake","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","unfollow","follow","src","photos","small","userPhoto","alt","disabled","some","Users","Preloader","preloader","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","resultCode","followSuccess","unfollowSuccess","page","items","totalCount","Header","logo","loginBlock","login","logout","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","posts","likeCount","newPostText","profile","setStatus","profileReducer","newPost","postId","Post","maxLength10","AddNewPostFormRedux","MyPosts","memo","log","createRef","postsElement","reverse","addPost","MyPostsContainer","profilePage","addPostActionCreator","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileInfo","info","Profile","Profileinfo","store","ProfileContainer","match","params","authorizedUserId","history","getUserProfile","withRouter","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","initialized","appReducer","App","initializeApp","wrap","content","render","DialogsContainer","app","promise","Promise","all","Boolean","window","location","hostname","bestFriends","navBarReducer","reducer","combineReducers","navBar","formReducer","createStore","applyMiddleware","thunkMiddleware","renderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0197ce28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"site\":\"Footer_site__2AO7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1jXcm\",\"selectedPage\":\"Users_selectedPage__brIVq\"};","module.exports = __webpack_public_path__ + \"static/media/profile-avatar-png-4.2a0429f4.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader5.3a762010.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3YcsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Navbar_item__1iQTB\",\"activeLink\":\"Navbar_activeLink__1nwlw\",\"subTitle\":\"Navbar_subTitle__3MLXD\"};","import React from \"react\";\r\nimport css from \"./Footer.module.css\";\r\n\r\nlet Footer = () => {\r\n  return (\r\n\t\t<footer>\r\n\t\t\t<div className={css.site}>\r\n\t\t\t\t<a href=\"#s\">www.site.com</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport css from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Navbar = (props) => {\r\n  /*let friendsArr = props.state.bestFriends.map(f => {\r\n    return <div>{f.name + ' '}</div>\r\n  });*/\r\n  return (\r\n    <nav>\r\n      <div className={css.item}>\r\n        <NavLink to='/profile' activeClassName={css.activeLink}>Profile</NavLink>\r\n      </div>\r\n      <div className={css.item}>\r\n        <NavLink to='/dialogs' activeClassName={css.activeLink}>Messages</NavLink>\r\n      </div>\r\n      <div className={css.item}>\r\n        <NavLink to='/users' activeClassName={css.activeLink}>Users</NavLink>\r\n      </div>\r\n      <div className={css.item}>\r\n        <NavLink to='/news' activeClassName={css.activeLink}>News</NavLink>\r\n      </div>\r\n      <div className={css.item}>\r\n        <NavLink to='/music' activeClassName={css.activeLink}>Music</NavLink>\r\n      </div>\r\n      <div className={css.item}>\r\n        <NavLink to='/settings' activeClassName={css.activeLink}>Settings</NavLink>\r\n      </div>\r\n      {/*<div className={css.bestFriends}>\r\n        <div className={css.subTitle}>\r\n          Best Friends\r\n        </div>\r\n        <div className={css.friends}>\r\n          <div className={css.item}>\r\n            {friendsArr}\r\n          </div>\r\n        </div>\r\n      </div>*/}\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport css from \"./News.module.css\";\r\n\r\nlet News = (props) => {\r\n  return (\r\n\t\t<div>\r\n      News\r\n    </div>\r\n\t)\r\n}\r\n\r\nexport default News;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    {id: 1, name: 'Dimych'},\r\n    {id: 2, name: 'Roman'},\r\n    {id: 3, name: 'Mark'},\r\n    {id: 4, name: 'Igor'}\r\n  ],\r\n  messages: [\r\n    {id: 1, message: 'Hi!'},\r\n    {id: 2, message: 'Hello!'},\r\n    {id: 3, message: 'Yo'},\r\n    {id: 4, message: ':)'}\r\n  ],\r\n}\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: 6, message: body}]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport css from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Dialog = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n  return (\r\n    <div className={css.dialog}>\r\n      <NavLink to={path} activeClassName={css.active}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport css from \"./Message.module.css\";\r\n\r\nlet Message = (props) => {\r\n  let date = new Date().toLocaleTimeString('ru', {hour: '2-digit', minute: '2-digit'});\r\n  return (\r\n    <div className={css.messages}>\r\n      <div className={css.text}>{props.message}<br/>\r\n      </div>\r\n      <div className={css.date}>{date}</div>\r\n      <div className={css.tail}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport css from \"./FormsControls.module.css\";\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={css.formControl + \" \" + (hasError ? css.error : \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      { hasError && <span>{meta.error}</span> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}","export const required = value => {\r\n  if (value) return undefined;\r\n\r\n  return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n}","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea}\r\n               validate={[required, maxLength50]}\r\n               placeholder='Enter your message' name=\"newMessageBody\" />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n\r\n","import React from \"react\";\r\nimport css from \"./Dialogs.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\nlet Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map( d => <Dialog name={d.name} id={d.id} /> );\r\n  let messagesElements = state.messages.map( m => <Message message={m.message} /> );\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n  return (\r\n    <div className={css.dialogs}>\r\n      <div className={css.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={css.messages}>\r\n        <div>{ messagesElements}</div>\r\n        <div>\r\n          <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    </div>\r\n</div>\r\n)\r\n}\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    \"API-KEY\": \"0fdd1160-d444-4949-8fed-55c8b35e8906\"\r\n  }\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    // debugger;\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => {\r\n        // debugger;\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`)\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`)\r\n  },\r\n  getProfile(userId) {\r\n    console.warn('Obsolete method. Please profileAPI object.')\r\n    return profileAPI.getProfile(userId);\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/` + userId);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, {status: status});\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe});\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  }\r\n}","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: [],\r\n  fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FAKE\": return {...state, fake: state.fake + 1}\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: true}\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: false}\r\n          }\r\n          return u;\r\n        })\r\n      }\r\n    case SET_USERS: {\r\n      return {...state, users: action.users}\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return {...state, currentPage: action.currentPage}\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return {...state, totalUsersCount: action.count}\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return {...state, isFetching: action.isFetching}\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    usersAPI.getUsers(page, pageSize).then(data => {\r\n      dispatch(setCurrentPage(page));\r\n      dispatch(toggleIsFetching(false));\r\n      dispatch(setUsers(data.items));\r\n      dispatch(setTotalUsersCount(data.totalCount));\r\n    });\r\n  }\r\n}\r\nexport const follow = (userId) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    usersAPI.follow(userId)\r\n      .then(response => {\r\n        if (response.data.resultCode == 0) {\r\n          dispatch(followSuccess(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId));\r\n      });\r\n  }\r\n}\r\nexport const unfollow = (userId) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    usersAPI.unfollow(userId)\r\n      .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n          dispatch(unfollowSuccess(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId));\r\n      });\r\n  }\r\n}\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport css from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\ndebugger\r\n    return <div className={css.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [css.selectedPage]: currentPage === p\r\n                }, css.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport css from '../Users.module.css';\r\nimport userPhoto from '../../../img/profile-avatar-png-4.png';\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n  return (\r\n    <div>\r\n      <span>\r\n        <div>\r\n          <NavLink to={'/profile/' + user.id}>\r\n            <img src={user.photos.small != null ? user.photos.small : userPhoto} className={css.userPhoto} alt='user'/>\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n        {user.followed\r\n          ? <button disabled={followingInProgress\r\n            .some(id => id === user.id)}\r\n                    onClick={() => {\r\n                      unfollow(user.id)\r\n                    }}>\r\n            Unfollow</button>\r\n          : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                    onClick={() => {\r\n                      follow(user.id)\r\n                    }}>Follow</button>}\r\n         </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n        <span>\r\n          <div>{\"user.location.country\"}</div>\r\n          <div>{\"user.location.city\"}</div>\r\n        </span>\r\n      </span>\r\n    </div>)\r\n}\r\n\r\nexport default User;\r\n\r\n","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n  return (\r\n    <div>\r\n      <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                 totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n      <div>\r\n        {\r\n          users.map(u => <User user={u}\r\n                               followingInProgress={props.followingInProgress}\r\n                               key={u.id}\r\n                               unfollow={props.unfollow}\r\n                               follow={props.follow}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Users;","import React from 'react';\r\nimport preloader from \"../../../img/preloader5.svg\";\r\n\r\nlet Preloader = () => {\r\n  return <div>\r\n    <img src={preloader} alt='preloader'/>\r\n  </div>\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n  return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n  (users) => {\r\n    return users.filter(u => true);\r\n  })\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n  debugger\r\n  //for... math... big arrays\r\n  let count = 23;\r\n  return count;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  follow,\r\n  setCurrentPage,\r\n  unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    const {currentPage, pageSize} = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    const {pageSize} = this.props;\r\n    this.props.getUsers(pageNumber, pageSize);\r\n  }\r\n\r\n  render() {\r\n\r\n    return <>\r\n      {this.props.isFetching ? <Preloader/> : null}\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n             pageSize={this.props.pageSize}\r\n             currentPage={this.props.currentPage}\r\n             onPageChanged={this.onPageChanged}\r\n             users={this.props.users}\r\n             follow={this.props.follow}\r\n             unfollow={this.props.unfollow}\r\n             followingInProgress={this.props.followingInProgress}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from \"react\";\r\nimport css from\"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Header = (props) => {\r\n  return (\r\n\t\t<header>\r\n\t\t\t<div className={css.logo}>\r\n\t\t\t\t<img src=\"https://png.pngtree.com/element_pic/00/16/07/115783931601b5c.jpg\" alt=\"logo\"/>\r\n\t\t\t</div>\r\n\r\n      <div className={css.loginBlock}>\r\n        { props.isAuth\r\n          ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n          : <NavLink to={'/login'}>Login</NavLink> }\r\n      </div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA, payload:\r\n    {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n  return authAPI.me()\r\n    .then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n      }\r\n    });\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n  authAPI.login(email, password, rememberMe)\r\n    .then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n      } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n      }\r\n    });\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  authAPI.logout()\r\n    .then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n      }\r\n    });\r\n}\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: 'Hi, there', likeCount: 15},\r\n    {id: 2, message: 'How are you?', likeCount: 7}\r\n  ],\r\n  newPostText: 'it-kamasutra.com',\r\n  profile: null,\r\n  status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n  switch(action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPostText,\r\n        likeCount: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: ''\r\n      };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return {...state, profile: action.profile}\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n    }\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(p => p.id != action.postId)}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n  usersAPI.getProfile(userId).then(response => {\r\n    dispatch(setUserProfile(response.data));\r\n  });\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n  profileAPI.getStatus(userId)\r\n    .then(response => {\r\n      dispatch(setStatus(response.data));\r\n    });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n  profileAPI.updateStatus(status)\r\n    .then(response => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n      }\r\n    });\r\n}\r\n\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport css from \"./Post.module.css\";\r\n\r\nlet Post = (props) => {\r\n  return (\r\n\t\t<div className={css.item}>\r\n      <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRpllVVc01fT_q0UD6voIKBBw9RXGfxW6Te6hmqWS688PqHG7Ji&usqp=CAU\" alt=\"user post\"/>\r\n      <div>{props.message}</div>\r\n      <span>{`like  ${props.likeCount}`}</span>\r\n    </div>\r\n\t)\r\n}\r\n\r\nexport default Post;","import React, {createRef} from \"react\";\r\nimport css from \"./MyPosts.module.css\";\r\n\r\nimport Post from \"./Post/Post\";\r\n\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n             validate={[required, maxLength10]}/>\r\n    </div>\r\n    <div>\r\n      <button>Add post</button>\r\n    </div>\r\n  </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n  console.log(\"RENDER\");\r\n  let textAreaRef = React.createRef();\r\n  let postsElement =\r\n    [...props.posts]\r\n      .reverse()\r\n      .map(p => <Post message={p.message} likeCount={p.likeCount}/>);\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      New Post\r\n      <div>\r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n      </div>\r\n      {postsElement}\r\n    </div>\r\n  )\r\n});\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    //newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;\r\n","import React, {useEffect, useState} from 'react';\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status);\r\n  }, [props.status] );\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      { !editMode &&\r\n      <div>\r\n        <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n      </div>\r\n      }\r\n      {editMode &&\r\n      <div>\r\n        <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n               value={status} />\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status\r\n  }\r\n\r\n  activateEditMode = () => {\r\n    this.setState( {\r\n      editMode: true\r\n    } );\r\n  }\r\n  deactivateEditMode() {\r\n    this.setState( {\r\n      editMode: false\r\n    } );\r\n    this.props.updateStatus(this.state.status);\r\n  }\r\n\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status\r\n      });\r\n    }\r\n\r\n    console.log(\"componentDidUpdate\")\r\n  }\r\n\r\n  render() {\r\n    console.log(\"render\")\r\n    return (\r\n      <div>\r\n        {!this.state.editMode &&\r\n        <div>\r\n          <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"-------\"}</span>\r\n        </div>\r\n        }\r\n        {this.state.editMode &&\r\n        <div>\r\n          <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode.bind(this) } value={this.state.status}/>\r\n        </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ProfileStatus;","import React from 'react';\r\nimport css from './Profileinfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n    return (\r\n      <div className={css.info} >\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        <img src=\"\" alt=\"\" />\r\n        <div>Description </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport css from \"./ProfileInfo/Profileinfo.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Profileinfo from \"./ProfileInfo/Profileinfo\";\r\n\r\nlet Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <Profileinfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer store={props.store} />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"RENDER PROFILE\");\r\n    return (\r\n      <Profile {...this.props}\r\n               profile={this.props.profile}\r\n               status={this.props.status}\r\n               updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  //console.log('mapStateToProps PROFILE')\r\n  return ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  })\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n)(ProfileContainer);\r\n","import React from 'react';\r\nimport css from '../common/FormsControls/FormsControls.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder={\"Email\"} name={\"email\"}\r\n               validate={[required]}\r\n               component={Input}/>\r\n      </div>\r\n      <div>\r\n        <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n               validate={[required]}\r\n               component={Input}/>\r\n      </div>\r\n      <div>\r\n        <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n      </div>\r\n      { props.error && <div className={css.formSummaryError}>\r\n        {props.error}\r\n      </div>\r\n      }\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />\r\n  }\r\n\r\n  return <div>\r\n    <h1>Login</h1>\r\n    <LoginReduxForm onSubmit={onSubmit} />\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  //dispatch(somethingelse());\r\n  //dispatch(somethingelse());\r\n  Promise.all([promise])\r\n    .then(() => {\r\n      dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport css from './App.module.css';\r\nimport Footer from './components/Footer/Footer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/News\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={css.wrap}>\r\n          <HeaderContainer/>\r\n          <Navbar/>\r\n          <div className={css.content}>\r\n            <Route path='/profile/:userId?'\r\n                   render={() => <ProfileContainer/>}/>\r\n            <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n            <Route path='/users'\r\n                   render={() => <UsersContainer/>}/>\r\n            <Route path='/news' component={News}/>\r\n            <Route path='/login'\r\n                   render={() => <LoginPage/>}/>\r\n          </div>\r\n          <Footer/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {initializeApp}))(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initialState = {\r\n  bestFriends: [\r\n    {id: 1, name: 'Dimych'},\r\n    {id: 2, name: 'Roman'},\r\n    {id: 3, name: 'Mark'}\r\n  ]\r\n}\r\n\r\nconst navBarReducer = (state = initialState, action) => {\r\n  return state;\r\n}\r\n\r\nexport default navBarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport navBarReducer from \"./navbar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  navBar: navBarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n})\r\nlet store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nlet renderEntireTree = () => {\r\n\r\n  /*setInterval(() => {\r\n    store.dispatch({type: \"FAKE\"})\r\n}, 1000);*/\r\n\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </React.StrictMode>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\nrenderEntireTree();\r\n\r\nstore.subscribe(() => {\r\n  renderEntireTree()\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3wsgs\",\"error\":\"FormsControls_error__2H7q3\",\"formSummaryError\":\"FormsControls_formSummaryError__5kYvw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1cPZ-\",\"text\":\"Message_text__2yixR\",\"date\":\"Message_date__1my-o\",\"tail\":\"Message_tail__3jLzf\",\"red\":\"Message_red__1pVqJ\",\"black\":\"Message_black__1YKr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1HH8S\",\"dialogsItem\":\"Dialogs_dialogsItem__1WPGU\",\"dialog\":\"Dialogs_dialog__IaCZR\",\"active\":\"Dialogs_active__1mo71\",\"messages\":\"Dialogs_messages__2naYl\",\"message\":\"Dialogs_message__2JowW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__S-g20\",\"pageNumber\":\"Paginator_pageNumber__1ZGIs\",\"selectedPage\":\"Paginator_selectedPage__1rtke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profileinfo_content__1dF-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"App_wrap__WILQV\",\"content\":\"App_content__3zmcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1hjkE\",\"active\":\"Dialog_active__2I_6Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__2Ag3D\",\"loginBlock\":\"Header_loginBlock__30ad1\"};"],"sourceRoot":""}